{
	"openapi": "3.0.3",
	"info": {
	  "title": "pdv-ms-user-registry",
	  "description": "User Registry API documentation",
	  "version": "1.0-SNAPSHOT"
	},
	"servers": [
	  {
		"url": "${uri}/{basePath}",
		"variables": {
			"basePath": {
				"default": "/v1"
			}
		}
	  }
	],
	"tags": [
	  {
		"name": "users",
		"description": "User Controller"
	  }
	],
	"paths": {
	  "/users": {
		"patch": {
		  "x-amazon-apigateway-integration": {
			"type": "HTTP_PROXY",
			"httpMethod": "PATCH",
			"uri": "${uri}/users",
			"connectionType": "VPC_LINK",
			"connectionId": "${connection_id}",
			"requestParameters": {
				"integration.request.header.x-pagopa-namespace": "method.request.header.x-pagopa-namespace"
			}
		  },
		  "tags": [
			"users"
		  ],
		  "summary": "Update or create user by external id",
		  "description": "Update an existing user by external id, if not present create a new one",
		  "operationId": "upsertUserUsingPATCH",
		  "parameters": [
			{
			  "name": "x-pagopa-namespace",
			  "in": "header",
			  "description": "x-pagopa-namespace",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "requestBody": {
			"content": {
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/SaveUserDto"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/UserInternalId"
				  }
				}
			  }
			},
			"204": {
			  "description": "No Content"
			},
			"401": {
			  "description": "Unauthorized"
			},
			"403": {
			  "description": "Forbidden"
			}
		  },
		  "security" : [ {
			"api_key" : [ ]
		}]
		}
	  },
	  "/users/search": {
		"post": {
				"x-amazon-apigateway-integration": {
				  "type": "HTTP_PROXY",
				  "httpMethod": "POST",
				  "uri": "${uri}/users/search",
				  "connectionType": "VPC_LINK",
				  "connectionId": "${connection_id}",
				  "requestParameters": {
					  "integration.request.header.x-pagopa-namespace": "method.request.header.x-pagopa-namespace",
					  "integration.request.querystring.fl": "method.request.querystring.fl"
				  }
				},
		  "tags": [
			"users"
		  ],
		  "summary": "Get user by external id",
		  "description": "Retrieve the user for the given external id",
		  "operationId": "searchUserUsingPOST",
		  "parameters": [
			{
			  "name": "x-pagopa-namespace",
			  "in": "header",
			  "description": "x-pagopa-namespace",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "fl",
			  "in": "query",
			  "description": "$${swagger.model.user.fl}",
			  "required": true,
			  "style": "form",
			  "explode": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "requestBody": {
			"content": {
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/UserSearchDto"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/UserResource"
				  }
				}
			  }
			},
			"201": {
			  "description": "Created"
			},
			"401": {
			  "description": "Unauthorized"
			},
			"403": {
			  "description": "Forbidden"
			},
			"404": {
			  "description": "Not Found"
			}
		  },
		  "security" : [ {
			"api_key" : [ ]
		}]
		}
	  },
	  "/users/{id}": {
		"get": {
			"x-amazon-apigateway-integration": {
				"type": "HTTP_PROXY",
				"httpMethod": "GET",
				"uri": "${uri}/users/{id}",
				"connectionType": "VPC_LINK",
				"connectionId": "${connection_id}",
				"requestParameters": {
					"integration.request.path.id": "method.request.path.id",
					"integration.request.querystring.fl": "method.request.querystring.fl"
				}
			  },
		  "tags": [
			"users"
		  ],
		  "summary": "Get user by internal UUID",
		  "description": "Retrieve the user for the given internal UUID",
		  "operationId": "getUserByIdUsingGET",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "$${swagger.model.user.id}",
			  "required": true,
			  "style": "simple",
			  "schema": {
				"type": "string",
				"format": "uuid"
			  }
			},
			{
			  "name": "fl",
			  "in": "query",
			  "description": "$${swagger.model.user.fl}",
			  "required": true,
			  "style": "form",
			  "explode": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "OK",
			  "content": {
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/UserResource"
				  }
				}
			  }
			},
			"401": {
			  "description": "Unauthorized"
			},
			"403": {
			  "description": "Forbidden"
			},
			"404": {
			  "description": "Not Found"
			}
		  },
		  "security" : [ {
			"api_key" : [ ]
		}]
		},
		"delete": {
			"x-amazon-apigateway-integration": {
				"type": "HTTP_PROXY",
				"httpMethod": "DELETE",
				"uri": "${uri}/users/{id}",
				"connectionType": "VPC_LINK",
				"connectionId": "${connection_id}",
				"requestParameters": {
					"integration.request.path.id": "method.request.path.id"
				}
			  },
		  "tags": [
			"users"
		  ],
		  "summary": "Delete user by internal UUID",
		  "description": "Delete the user for the given internal UUID",
		  "operationId": "deleteByIdUsingDELETE",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "$${swagger.model.user.id}",
			  "required": true,
			  "style": "simple",
			  "schema": {
				"type": "string",
				"format": "uuid"
			  }
			}
		  ],
		  "responses": {
			"204": {
			  "description": "No Content"
			},
			"401": {
			  "description": "Unauthorized"
			},
			"403": {
			  "description": "Forbidden"
			}
		  }
		},
		"patch": {
			"x-amazon-apigateway-integration": {
				"type": "HTTP_PROXY",
				"httpMethod": "PATCH",
				"uri": "${uri}/users/{id}",
				"connectionType": "VPC_LINK",
				"connectionId": "${connection_id}",
				"requestParameters": {
					"integration.request.path.id": "method.request.path.id"
				}
			  },
		  "tags": [
			"users"
		  ],
		  "summary": "Update a subset of user fields by internal UUID",
		  "description": "Update a subset of fields of an existing user by external id, if not present an error is returned",
		  "operationId": "updateUserUsingPATCH",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "description": "$${swagger.model.user.id}",
			  "required": true,
			  "style": "simple",
			  "schema": {
				"type": "string",
				"format": "uuid"
			  }
			}
		  ],
		  "requestBody": {
			"content": {
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/MutableUserFieldsDto"
				}
			  }
			}
		  },
		  "responses": {
			"204": {
			  "description": "No Content"
			},
			"401": {
			  "description": "Unauthorized"
			},
			"403": {
			  "description": "Forbidden"
			}
		  },
		  "security" : [ {
			"api_key" : [ ]
		}]
		}
	  }
	},
	"components": {
	  "schemas": {
		"MutableUserFieldsDto": {
		  "title": "MutableUserFieldsDto",
		  "type": "object",
		  "properties": {
			"familyName": {
			  "type": "string"
			},
			"givenName": {
			  "type": "string"
			},
			"workContacts": {
			  "type": "object",
			  "additionalProperties": {
				"$ref": "#/components/schemas/WorkContactResource"
			  }
			}
		  }
		},
		"SaveUserDto": {
		  "title": "SaveUserDto",
		  "type": "object",
		  "properties": {
			"familyName": {
			  "type": "string"
			},
			"fiscalCode": {
			  "type": "string"
			},
			"givenName": {
			  "type": "string"
			},
			"workContacts": {
			  "type": "object",
			  "additionalProperties": {
				"$ref": "#/components/schemas/WorkContactResource"
			  }
			}
		  }
		},
		"UserInternalId": {
		  "title": "UserInternalId",
		  "required": [
			"internalId"
		  ],
		  "type": "object",
		  "properties": {
			"internalId": {
			  "type": "string",
			  "format": "uuid"
			}
		  }
		},
		"UserResource": {
		  "title": "UserResource",
		  "type": "object",
		  "properties": {
			"familyName": {
			  "type": "string"
			},
			"fiscalCode": {
			  "type": "string"
			},
			"givenName": {
			  "type": "string"
			},
			"id": {
			  "type": "string"
			},
			"workContacts": {
			  "type": "object",
			  "additionalProperties": {
				"$ref": "#/components/schemas/WorkContactResource"
			  }
			}
		  }
		},
		"UserSearchDto": {
		  "title": "UserSearchDto",
		  "required": [
			"fiscalCode"
		  ],
		  "type": "object",
		  "properties": {
			"fiscalCode": {
			  "type": "string",
			  "description": "$${swagger.model.user.fiscalCode}"
			}
		  }
		},
		"WorkContactResource": {
		  "title": "WorkContactResource",
		  "type": "object",
		  "properties": {
			"email": {
			  "type": "string"
			}
		  }
		}
	  },
	  "securitySchemes" : {
		"api_key" : {
		  "type" : "apiKey",
		  "name" : "x-api-key",
		  "in" : "header"
		}
	  }
	}
  }