{
  "openapi": "3.0.3",
  "info": {
    "title": "pdv-ms-user-registry",
    "description": "User Registry API documentation",
    "version": "1.0-SNAPSHOT"
  },
  "servers": [
    {
      "url": "${uri}{basePath}",
      "variables": {
        "basePath": {
          "default": "/v1"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "User operations"
    }
  ],
  "paths": {
    "/users": {
      "patch": {
        %{ if export == "false" ~}
        "x-amazon-apigateway-integration": {
          "type": "HTTP",
          "httpMethod": "PATCH",
          "uri": "${uri}/users",
          "connectionType": "VPC_LINK",
          "connectionId": "${connection_id}",
          "requestParameters": {},
          "passthroughBehavior": "WHEN_NO_TEMPLATES",
          "requestTemplates" : {
            "application/json" : "${write_request_template}"
          },
          "responses": {
            ${responses}
          }
        },
        %{ endif ~}
        "tags": [
          "user"
        ],
        "summary": "Upsert user",
        "description": "Update the given subset fields of an existing user by external id, if not present create a new one",
        "operationId": "saveUsingPATCH",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserId"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/users/search": {
      "post": {
        "x-amazon-apigateway-integration": {
          "type": "HTTP",
          "httpMethod": "POST",
          "uri": "${uri}/users/search",
          "connectionType": "VPC_LINK",
          "connectionId": "${connection_id}",
          "passthroughBehavior": "WHEN_NO_TEMPLATES",
          "requestParameters": {
            "integration.request.querystring.fl": "method.request.multivaluequerystring.fl"
          },
          "requestTemplates" : {
            "application/json" : "${write_request_template}"
          },
          "responses": {
            ${responses}
          }
        },
        "tags": [
          "user"
        ],
        "summary": "Search user",
        "description": "Search a user given its fiscal code",
        "operationId": "searchUsingPOST",
        "parameters": [
          {
            "name": "fl",
            "in": "query",
            "description": "Field list. Subset of fields to be retrieved for the requested resource",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "birthDate",
                  "email",
                  "familyName",
                  "fiscalCode",
                  "name",
                  "workContacts"
                ]
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSearchDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResource"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "x-amazon-apigateway-integration": {
          "type": "HTTP",
          "httpMethod": "GET",
          "uri": "${uri}/users/{id}",
          "connectionType": "VPC_LINK",
          "connectionId": "${connection_id}",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id",
            "integration.request.querystring.fl": "method.request.multivaluequerystring.fl"          
          },
          "passthroughBehavior": "WHEN_NO_TEMPLATES",
          "requestTemplates" : {
            "application/json" : "${write_request_template}"
          },
          "responses": {
            ${responses}
          }
        },
        "tags": [
          "user"
        ],
        "summary": "Find user",
        "description": "Retrieve the user by its internal id",
        "operationId": "findByIdUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User internal id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fl",
            "in": "query",
            "description": "Field list. Subset of fields to be retrieved for the requested resource",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "birthDate",
                  "email",
                  "familyName",
                  "fiscalCode",
                  "name",
                  "workContacts"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResource"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "patch": {
        "x-amazon-apigateway-integration": {
          "type": "HTTP",
          "httpMethod": "PATCH",
          "uri": "${uri}/users/{id}",
          "connectionType": "VPC_LINK",
          "connectionId": "${connection_id}",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "WHEN_NO_TEMPLATES",
          "requestTemplates" : {
            "application/json" : "${write_request_template}"
          },
          "responses": {
            ${responses}
          }
        },
        "tags": [
          "user"
        ],
        "summary": "Update user",
        "description": "Update the given subset fields of an existing user by its internal id, if not present an error is returned",
        "operationId": "updateUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User internal id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MutableUserFieldsDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "BirthDateCertifiableSchema": {
        "type": "object",
        "description": "User date of birth",
        "properties": {
          "certification": {
            "type": "string",
            "description": "Certified source of information",
            "enum": [
              "NONE",
              "SPID"
            ]
          },
          "value": {
            "type": "string",
            "description": "Field value",
            "format": "date"
          }
        },
        "required": [
          "certification",
          "value"
        ]
      },
      "EmailCertifiableSchema": {
        "type": "object",
        "description": "User email",
        "properties": {
          "certification": {
            "type": "string",
            "description": "Certified source of information",
            "enum": [
              "NONE",
              "SPID"
            ]
          },
          "value": {
            "type": "string",
            "description": "Field value"
          }
        },
        "required": [
          "certification",
          "value"
        ]
      },
      "FamilyNameCertifiableSchema": {
        "type": "object",
        "description": "User family name",
        "properties": {
          "certification": {
            "type": "string",
            "description": "Certified source of information",
            "enum": [
              "NONE",
              "SPID"
            ]
          },
          "value": {
            "type": "string",
            "description": "Field value"
          }
        },
        "required": [
          "certification",
          "value"
        ]
      },
      "NameCertifiableSchema": {
        "type": "object",
        "description": "User name",
        "properties": {
          "certification": {
            "type": "string",
            "description": "Certified source of information",
            "enum": [
              "NONE",
              "SPID"
            ]
          },
          "value": {
            "type": "string",
            "description": "Field value"
          }
        },
        "required": [
          "certification",
          "value"
        ]
      },
      "MobilePhoneCertifiableSchema": {
        "type": "object",
        "description": "User work mobile phone number",
        "properties": {
          "certification": {
            "type": "string",
            "description": "Certified source of information",
            "enum": [
              "NONE",
              "SPID"
            ]
          },
          "value": {
            "type": "string",
            "description": "Field value"
          }
        },
        "required": [
          "certification",
          "value"
        ]
      },
      "TelephoneCertifiableSchema": {
        "type": "object",
        "description": "User work telephone number",
        "properties": {
          "certification": {
            "type": "string",
            "description": "Certified source of information",
            "enum": [
              "NONE",
              "SPID"
            ]
          },
          "value": {
            "type": "string",
            "description": "Field value"
          }
        },
        "required": [
          "certification",
          "value"
        ]
      },
      "MutableUserFieldsDto": {
        "title": "MutableUserFieldsDto",
        "type": "object",
        "properties": {
          "birthDate": {
            "description": "User date of birth",
            "$ref": "#/components/schemas/BirthDateCertifiableSchema"
          },
          "email": {
            "description": "User email",
            "$ref": "#/components/schemas/EmailCertifiableSchema"
          },
          "familyName": {
            "description": "User family name",
            "$ref": "#/components/schemas/FamilyNameCertifiableSchema"
          },
          "name": {
            "description": "User name",
            "$ref": "#/components/schemas/NameCertifiableSchema"
          },
          "workContacts": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/WorkContactResource"
            },
            "description": "User work contacts"
          }
        }
      },
      "SaveUserDto": {
        "required": [
          "fiscalCode"
        ],
        "type": "object",
        "properties": {
          "birthDate": {
            "$ref": "#/components/schemas/BirthDateCertifiableSchema"
          },
          "email": {
            "$ref": "#/components/schemas/EmailCertifiableSchema"
          },
          "familyName": {
            "$ref": "#/components/schemas/FamilyNameCertifiableSchema"
          },
          "fiscalCode": {
            "type": "string",
            "description": "User fiscal code"
          },
          "name": {
            "$ref": "#/components/schemas/NameCertifiableSchema"
          },
          "workContacts": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/WorkContactResource"
            },
            "description": "User work contacts"
          }
        }
      },
      "UserId": {
        "title": "UserId",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User internal id",
            "format": "uuid"
          }
        }
      },
      "UserResource": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "birthDate": {
            "$ref": "#/components/schemas/BirthDateCertifiableSchema"
          },
          "email": {
            "$ref": "#/components/schemas/EmailCertifiableSchema"
          },
          "familyName": {
            "$ref": "#/components/schemas/FamilyNameCertifiableSchema"
          },
          "fiscalCode": {
            "type": "string",
            "description": "User fiscal code"
          },
          "id": {
            "type": "string",
            "description": "User internal id",
            "format": "uuid"
          },
          "name": {
            "$ref": "#/components/schemas/NameCertifiableSchema"
          },
          "workContacts": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/WorkContactResource"
            },
            "description": "User work contacts"
          }
        }
      },
      "UserSearchDto": {
        "title": "UserSearchDto",
        "required": [
          "fiscalCode"
        ],
        "type": "object",
        "properties": {
          "fiscalCode": {
            "type": "string",
            "description": "User fiscal code"
          }
        }
      },
      "WorkContactResource": {
        "type": "object",
        "properties": {
          "email": {
            "$ref": "#/components/schemas/EmailCertifiableSchema"
          },
          "mobilePhone": {
            "$ref": "#/components/schemas/MobilePhoneCertifiableSchema"
          },
          "telephone": {
            "$ref": "#/components/schemas/TelephoneCertifiableSchema"
          }
        },
        "description": "User work contacts"
      },
      "Problem": {
        "title": "Problem",
        "required": [
          "status",
          "title"
        ],
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "description": "Human-readable description of this specific problem."
          },
          "instance": {
            "type": "string",
            "description": "A URI that describes where the problem occurred."
          },
          "invalidParams": {
            "type": "array",
            "description": "A list of invalid parameters details.",
            "items": {
              "$ref": "#/components/schemas/InvalidParam"
            }
          },
          "status": {
            "type": "integer",
            "description": "The HTTP status code.",
            "format": "int32",
            "example": 500
          },
          "title": {
            "type": "string",
            "description": "Short human-readable summary of the problem."
          },
          "type": {
            "type": "string",
            "description": "A URL to a page with more details regarding the problem."
          }
        },
        "description": "A \"problem detail\" as a way to carry machine-readable details of errors (https://datatracker.ietf.org/doc/html/rfc7807)"
      },
      "InvalidParam": {
        "title": "InvalidParam",
        "required": [
          "name",
          "reason"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Invalid parameter name."
          },
          "reason": {
            "type": "string",
            "description": "Invalid parameter reason."
          }
        }
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header"
      }
    }
  }
}
